[tool.poetry]
name = "lithic"
version = "0.9.0"
description = "Client library for the lithic API"
readme = "README.md"
authors = ["Lithic <sdk-feedback@lithic.com>"]
license = "Apache-2.0"
repository = "https://github.com/lithic-com/lithic-python"
packages = [
  { include = "lithic", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.7"
httpx = ">= 0.23.0"
pydantic = ">= 1.9.0"
typing-extensions = ">= 4.1.1"
anyio = ">= 3.5.0"
distro = ">= 1.7.0"

[tool.poetry.dev-dependencies]
mypy = "^0.982"
black = "^22.1.0"
respx = "^0.19.2"
pytest = "^7.1.1"
pytest-asyncio = "^0.18.3"
pyright = "^1.1.277"
ruff = "^0.0.239"
isort = "5.10.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py37"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--tb=short"
xfail_strict = true
log_cli = true
log_level = "INFO"
asyncio_mode = "auto"

[tool.pyright]
# this enables practically every flag given by pyright.
# there are a couple of flags that are still disabled by
# default in strict mode as they are experimental and niche.
typeCheckingMode = "strict"
pythonVersion = "3.7"

exclude = [
    "_dev",
    ".venv"
]
reportImportCycles = false
reportPrivateUsage = false

[tool.isort]
profile = "black"
length_sort = true
extra_standard_library = ["typing_extensions"]

[tool.ruff]
line-length = 120
format = "grouped"
target-version = "py37"
select = [
  # remove unused imports
  "F401",
]
ignore-init-module-imports = true

